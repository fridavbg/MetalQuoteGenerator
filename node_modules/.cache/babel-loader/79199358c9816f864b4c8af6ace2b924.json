{"ast":null,"code":"var _jsxFileName = \"/Users/fridavbg/Desktop/React/RandomQuoteMachine/src/Components/QuoteBox.js\";\nimport React, { Fragment } from \"react\";\n\nclass QuoteBox extends React.Component {\n  constructor() {\n    super();\n\n    this.getRandomQuote = () => {\n      let quoteNum = Math.floor(Math.random() * this.state.quoteIndex); //quote number\n\n      let randomQuote = this.state.quotes[quoteNum]; //actual quote\n\n      this.setState({\n        quote: randomQuote[\"quote\"],\n        author: randomQuote[\"author\"]\n      });\n    };\n\n    this.state = {\n      quotes: [],\n      quoteIndex: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(data => data.json()).then(quotes => this.setState({\n      quotes\n    }, () => {\n      this.setState({\n        quoteIndex: this.getRandomQuote()\n      });\n    }));\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"RandomQuoteGenerator\"), React.createElement(\"button\", {\n      onClick: this.getRandomQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"New Quote\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), this.hasQuote === true ? null : \"no quote yet\");\n  }\n\n}\n\nexport default QuoteBox;","map":{"version":3,"sources":["/Users/fridavbg/Desktop/React/RandomQuoteMachine/src/Components/QuoteBox.js"],"names":["React","Fragment","QuoteBox","Component","constructor","getRandomQuote","quoteNum","Math","floor","random","state","quoteIndex","randomQuote","quotes","setState","quote","author","componentDidMount","fetch","then","data","json","render","hasQuote"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAoBdC,cApBc,GAoBG,MAAM;AACrB,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKC,KAAL,CAAWC,UAAtC,CAAf,CADqB,CAC6C;;AAClE,UAAIC,WAAW,GAAG,KAAKF,KAAL,CAAWG,MAAX,CAAkBP,QAAlB,CAAlB,CAFqB,CAE0B;;AAE/C,WAAKQ,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEH,WAAW,CAAC,OAAD,CADN;AAEZI,QAAAA,MAAM,EAAEJ,WAAW,CAAC,QAAD;AAFP,OAAd;AAID,KA5Ba;;AAEZ,SAAKF,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE,EADG;AAEXF,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID;;AAEDM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,uIADG,CAAL,CAGGC,IAHH,CAGQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHhB,EAIGF,IAJH,CAIQN,MAAM,IACV,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,EAA0B,MAAM;AAC9B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAE,KAAKN,cAAL;AAAd,OAAd;AACD,KAFD,CALJ;AASD;;AAYDiB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKjB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMG,KAAKkB,QAAL,KAAkB,IAAlB,GAAyB,IAAzB,GAAgC,cANnC,CADF;AAUD;;AA1CoC;;AA6CvC,eAAerB,QAAf","sourcesContent":["import React, { Fragment } from \"react\";\n\nclass QuoteBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quotes: [],\n      quoteIndex: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n      .then(data => data.json())\n      .then(quotes =>\n        this.setState({ quotes }, () => {\n          this.setState({ quoteIndex: this.getRandomQuote() });\n        })\n      );\n  }\n\n  getRandomQuote = () => {\n    let quoteNum = Math.floor(Math.random() * this.state.quoteIndex); //quote number\n    let randomQuote = this.state.quotes[quoteNum]; //actual quote\n\n    this.setState({\n      quote: randomQuote[\"quote\"],\n      author: randomQuote[\"author\"]\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {/*A common pattern in React is for a component to return multiple elements. \n        Fragments let you group a list of children without adding extra nodes to the DOM.*/}\n        <h1>RandomQuoteGenerator</h1>\n        <button onClick={this.getRandomQuote}>New Quote</button>\n        <br />\n        {this.hasQuote === true ? null : \"no quote yet\"}\n      </Fragment>\n    );\n  }\n}\n\nexport default QuoteBox;\n"]},"metadata":{},"sourceType":"module"}