{"ast":null,"code":"var _jsxFileName = \"/Users/fridavbg/Desktop/React/RandomQuoteMachine/src/Components/QuoteBox.js\";\nimport React, { Fragment } from \"react\";\n\nclass QuoteBox extends React.Component {\n  constructor() {\n    super();\n\n    this.randomQuoteHandler = () => {\n      const randNumb = Math.floor(Math.random() * this.state.quotes.length);\n      const randomQuote = this.state.quotes[randNumb];\n      this.setState({\n        randomQuote\n      });\n    };\n\n    this.state = {\n      quotes: [],\n      quoteIndex: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(res => res.json()).then(data => {\n      this.setState({\n        quotes: data.quotes\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"RandomQuoteGenerator\"), React.createElement(\"button\", {\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"New Quote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.quotes), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default QuoteBox;","map":{"version":3,"sources":["/Users/fridavbg/Desktop/React/RandomQuoteMachine/src/Components/QuoteBox.js"],"names":["React","Fragment","QuoteBox","Component","constructor","randomQuoteHandler","randNumb","Math","floor","random","state","quotes","length","randomQuote","setState","quoteIndex","componentDidMount","fetch","then","res","json","data","render","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAmBdC,kBAnBc,GAmBO,MAAM;AACzB,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAA7C,CAAjB;AACA,YAAMC,WAAW,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBL,QAAlB,CAApB;AAEA,WAAKQ,QAAL,CAAc;AACZD,QAAAA;AADY,OAAd;AAGD,KA1Ba;;AAEZ,SAAKH,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXI,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,uIADG,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd,WAAKP,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEU,IAAI,CAACV;AAAf,OAAd;AAED,KAPH;AAQD;;AAWDW,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,EAIE;AAAQ,MAAA,WAAW,EAAE,KAAKC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKb,KAAL,CAAWC,MAAf,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAxCoC;;AA2CvC,eAAeT,QAAf","sourcesContent":["import React, { Fragment } from \"react\";\n\nclass QuoteBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quotes: [],\n      quoteIndex: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ quotes: data.quotes\n        });\n      })\n  }\n\n  randomQuoteHandler = () => {\n    const randNumb = Math.floor(Math.random() * this.state.quotes.length);\n    const randomQuote = this.state.quotes[randNumb];\n\n    this.setState({\n      randomQuote,\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {/*A common pattern in React is for a component to return multiple elements. \n        Fragments let you group a list of children without adding extra nodes to the DOM.*/}\n        <h1>RandomQuoteGenerator</h1>\n        <button handleClick={this.handleClick}>New Quote</button>\n        <p>{this.state.quotes}</p>\n        <br />\n      </Fragment>\n    );\n  }\n}\n\nexport default QuoteBox;\n"]},"metadata":{},"sourceType":"module"}