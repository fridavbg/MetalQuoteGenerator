{"ast":null,"code":"var _jsxFileName = \"/Users/fridavbg/Desktop/React/RandomQuoteMachine/src/Components/QuoteBox.js\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n\nclass QuoteBox extends Component {\n  constructor() {\n    super();\n\n    this.getRandomQuote = () => {\n      const randomIndex = Math.floor(Math.random() * this.state.quotes.length);\n      const randomQuote = this.state.quotes[randomIndex];\n      this.setState({\n        quote: randomQuote[\"quote\"],\n        author: randomQuote[\"author\"]\n      });\n    };\n\n    this.state = {\n      quote: \"\",\n      author: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/fridavbg/8c342b8b8a540ee865dc1766dc81736e/raw/4a63a0015f1ddc46600cdfc621589151b20e106f/rockQuotes.json\").then(data => data.json()).then(quotes => this.setState({\n      quotes\n    }));\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"background-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"quote-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h2\", {\n        id: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, this.state.quote),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        id: \"author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, this.state.author),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        id: \"new-quote\",\n        onClick: this.getRandomQuote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"Get a Quote\"),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(FontAwesomeIcon, {\n        icon: faHeart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(FontAwesomeIcon, {\n        icon: fabTwitter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }))))\n    );\n  }\n\n}\n\nexport default QuoteBox;","map":{"version":3,"sources":["/Users/fridavbg/Desktop/React/RandomQuoteMachine/src/Components/QuoteBox.js"],"names":["React","Component","FontAwesomeIcon","faHeart","fab","QuoteBox","constructor","getRandomQuote","randomIndex","Math","floor","random","state","quotes","length","randomQuote","setState","quote","author","componentDidMount","fetch","then","data","json","render","fabTwitter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,GAAT,QAAoB,oCAApB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgBdC,cAhBc,GAgBG,MAAM;AACrB,YAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAA7C,CAApB;AACA,YAAMC,WAAW,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBL,WAAlB,CAApB;AACA,WAAKQ,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,WAAW,CAAC,OAAD,CADN;AAEZG,QAAAA,MAAM,EAAEH,WAAW,CAAC,QAAD;AAFP,OAAd;AAID,KAvBa;;AAEZ,SAAKH,KAAL,GAAa;AACXK,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,2IADG,CAAL,CAGGC,IAHH,CAGSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAHlB,EAIGF,IAJH,CAISR,MAAD,IAAY,KAAKG,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd,CAJpB;AAKD;;AAWDW,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAK,QAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAI,QAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAe,KAAKZ,KAAL,CAAWK,KAA1B,CADF;AAAA;AAEE;AAAG,QAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,KAAKL,KAAL,CAAWM,MAA3B,CAFF;AAAA;AAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAAA;AAIE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE,KAAKX,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF;AAAA;AASE,0BAAC,eAAD;AAAiB,QAAA,IAAI,EAAEJ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF;AAAA;AAUE,0BAAC,eAAD;AAAiB,QAAA,IAAI,EAAEsB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CAHF,CADF;AADF;AAoBD;;AA/C8B;;AAkDjC,eAAepB,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n\nclass QuoteBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quote: \"\",\n      author: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/fridavbg/8c342b8b8a540ee865dc1766dc81736e/raw/4a63a0015f1ddc46600cdfc621589151b20e106f/rockQuotes.json\"\n    )\n      .then((data) => data.json())\n      .then((quotes) => this.setState({ quotes }));\n  }\n\n  getRandomQuote = () => {\n    const randomIndex = Math.floor(Math.random() * this.state.quotes.length);\n    const randomQuote = this.state.quotes[randomIndex];\n    this.setState({\n      quote: randomQuote[\"quote\"],\n      author: randomQuote[\"author\"],\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"background-image\">\n          {/*A common pattern in React is for a component to return multiple elements. \n        Fragments let you group a list of children without adding extra nodes to the DOM.*/}\n          <div id=\"quote-box\">\n            <h2 id=\"text\">{this.state.quote}</h2>\n            <p id=\"author\">{this.state.author}</p>\n            <br />\n            <button id=\"new-quote\" onClick={this.getRandomQuote}>\n              Get a Quote\n            </button>\n            <br />\n\n            <FontAwesomeIcon icon={faHeart} />\n            <FontAwesomeIcon icon={fabTwitter} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuoteBox;\n"]},"metadata":{},"sourceType":"module"}